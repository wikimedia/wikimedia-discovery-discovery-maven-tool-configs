<?xml version="1.0"?>
<FindBugsFilter>
    <Match>
        <!-- Disable all rules for scala -->
        <Source name="~.*\.scala"/>
    </Match>
    <!-- the following bugs are always ignored -->
    <Match>
        <!--
            Manually sizing collections is error prone and in most cases tend
            to be a micro optimization.
        -->
        <Bug pattern="PSC_PRESIZE_COLLECTIONS"/>
    </Match>

    <Match>
        <!-- Softening exception is an acceptable pattern in this project. -->
        <Or>
            <Bug pattern="EXS_EXCEPTION_SOFTENING_HAS_CHECKED"/>
            <Bug pattern="EXS_EXCEPTION_SOFTENING_NO_CONSTRAINTS"/>
        </Or>
    </Match>

    <Match>
        <!--
            Inverting comparison order when String literals are involved leads
            to unnatural code. Proper null checking should always be done
            anyway.
        -->
        <Bug pattern="LSC_LITERAL_STRING_COMPARISON"/>
    </Match>

    <Match>
        <!-- We have only seen false positives with this rule, so let's ignore it. -->
        <Bug pattern="CLI_CONSTANT_LIST_INDEX"/>
    </Match>

    <Match>
        <!-- Semantic isn't that confusing. -->
        <Bug pattern="CFS_CONFUSING_FUNCTION_SEMANTICS"/>
    </Match>

    <Match>
        <!-- While the rule make sense, it is used in a few lambdas where it
             generates false positives. Since we can't add @SuppressFBWarnings
             in lambdas, let's disable this rule for the moment. -->
        <Bug pattern="EC_UNRELATED_CLASS_AND_INTERFACE"/>
    </Match>

    <Match>
        <!-- We almost always want new lines to be the same on any platform. We
             send those across network more often than not. -->
        <Bug pattern="VA_FORMAT_STRING_USES_NEWLINE"/>
    </Match>

    <Match>
        <!-- EI_EXPOSE_REP will complain on any mutable parameter / return
        value. While it make sense to properly hide internal representation
        for collections (where easy alternatives exist), this rule does not
        make a lot sense for all classes. -->
        <Or>
            <Bug pattern="EI_EXPOSE_REP"/>
            <Bug pattern="EI_EXPOSE_REP2"/>
        </Or>
    </Match>

</FindBugsFilter>
